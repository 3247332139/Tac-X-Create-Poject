buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
        maven {url 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath "org.parchmentmc:librarian:1.+"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

mixin {
    add sourceSets.main, "main.refmap.json"
}
version = '1.0'
group = 'com.bfybf.tacxcreate'
archivesBaseName = 'tacxcreate'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'parchment', version: "2021.10.17-1.16.5"

    runs {
        client {
            property 'mixin.env.remapRefMap', 'true'

            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                tacxcreate {
                    source sourceSets.main
                }
            }
        }

        server {
            property 'mixin.env.remapRefMap', 'true'
            
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                tacxcreate {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'tacxcreate', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                tacxcreate {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "Cursemaven"
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6s maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven { // Registrate
        name = "tterrag maven"
        url "https://maven.tterrag.com/"
    }
    mavenLocal()
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'

    //jei
    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.153:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.153")

    //create
    implementation fg.deobf("com.simibubi.create:Create:mc1.16.5_v0.3.2g+483")
    implementation fg.deobf("com.jozufozu.flywheel:Flywheel:1.16-0.2.5.53")
    implementation fg.deobf("com.tterrag.registrate:Registrate:MC1.16.5-1.0.10")

    //tac
    implementation fg.deobf("curse.maven:timeless-and-classic-guns-tac-491264:4752973")
    implementation fg.deobf("curse.maven:curios-309927:3661903")
    implementation fg.deobf("curse.maven:obfuscate-289380:3740120")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "tacxcreate",
            "Specification-Vendor": "bfybf",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"bfybf",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
